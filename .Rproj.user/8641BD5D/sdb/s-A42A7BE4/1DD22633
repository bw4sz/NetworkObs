{
    "contents" : "\nsink(\"Bayesian/NmixturePoissonRagged2m.jags\")\n\ncat(\"\n    model {\n    #Compute true state for each pair of birds and plants\n    for (i in 1:Birds){\n    for (j in 1:Plants){\n    for (k in 1:Times){\n    \n    #Process Model\n    logit(rho[i,j,k])<-alpha[i] + beta1[i] * Traitmatch[i,j] + beta2[i] * resources[i,j,k]\n    \n    #True State\n    S[i,j,k] ~ dbern(rho[i,j,k])\n    }\n    }\n    }\n    \n    #Observation Model\n    for (x in 1:Nobs){\n    \n    #Observation Process for cameras\n    detect_cam[x]<-dcam * cam_surveys[x]\n\n    #Observation Process for transects\n    detect_transect[x]<-dtrans * trans_surveys[x]\n\n    Yobs_camera[x] ~ dbern(detect_cam[x] * S[Bird[x],Plant[x],Time[x]])    \n    Yobs_transect[x] ~ dbern(detect_transect[x] * S[Bird[x],Plant[x],Time[x]])    \n\n    #Assess Model Fit - Posterior predictive check\n\n    #Fit discrepancy statistics\n    #eval[x]<-detect[Bird[x]]*S[Bird[x],Plant[x],Camera[x]]\n    #E[x]<-pow((Yobs[x]-eval[x]),2)/(eval[x]+0.5)\n    \n    #ynew[x]~dbin(detect[Bird[x]],S[Bird[x],Plant[x],Camera[x]])\n    #E.new[x]<-pow((ynew[x]-eval[x]),2)/(eval[x]+0.5)\n    \n    }\n\n    #Transect Prior\n    #Detect priors, logit transformed\n    #For Cameras\n    logit(dcam) <- dcam_logit\n    dcam_logit ~ dnorm(0,0.386)\n    \n    #For Transects\n    logit(dtrans) <- dtrans_logit\n    dtrans_logit ~ dnorm(0,0.386)\n    \n    #Species level priors\n    for (i in 1:Birds){\n      \n      #Intercept\n      #logit prior, then transform for plotting\n      lalpha[i] ~ dnorm(lintercept,ltau_alpha)\n      logit(alpha[i])<-alpha[i]\n      \n      #Traits slope \n      lbeta1[i] ~ dnorm(lgamma1,ltau_beta1)    \n      logit(beta1[i])<-lbeta1[i]\n      #Plant slope\n      lbeta2[i] ~ dnorm(lgamma2,ltau_beta2)    \n      logit(beta2[i])<-lbeta2[i]\n    }\n\n    #Hyperpriors\n    #Slopes \n    #Logit prior for each, then transformed\n    lgamma1~dnorm(0,0.386)\n    logit(gamma1)<-lgamma1\n\n    lgamma2~dnorm(0,0.386)\n    logit(gamma2)<-lgamma2\n\n    #Intercept \n    lintercept~dnorm(0,0.386)\n    logit(intercept)<-lintercept\n\n    #Detection group prior\n    #dprior_cam ~ dnorm(0,0.386)\n    #dprior_trans ~ dnorm(0,0.386)\n\n    # Group intercept variance\n    ltau_alpha ~ dt(0,1,1)I(0,1)\n    logit(tau_alpha)<-ltau_alpha\n    sigma_alpha<-pow(1/tau_alpha,2) \n    \n    #Group effect detect camera\n    #tau_dcam ~ dunif(0,10)\n    #sigma_dcam<-pow(1/tau_dcam,.5)\n    \n    #Group effect detect camera\n    #tau_dtrans ~ dunif(0,10)\n    #sigma_dtrans<-pow(1/tau_dtrans,.5)\n\n    #Group Variance in trait slope\n    ltau_beta1 ~ dt(0,1,1)I(0,)\n    logit(tau_beta1)<-ltau_beta1\n    sigma_slope1<-pow(1/tau_beta1,.5)\n    \n    #Group Variance in Resources slope\n    ltau_beta2 ~ dt(0,1,1)I(0,)\n    logit(tau_beta2)<-ltau_beta2\n    sigma_slope2<-pow(1/tau_beta2,.5)\n\n}\n    \",fill=TRUE)\n\nsink()\n",
    "created" : 1460987733644.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4020678514",
    "id" : "1DD22633",
    "lastKnownWriteTime" : 1465316411,
    "path" : "~/NetworkPredict/Bayesian/NmixturePoissonRagged2m.R",
    "project_path" : "Bayesian/NmixturePoissonRagged2m.R",
    "properties" : {
    },
    "relative_order" : 3,
    "source_on_save" : false,
    "type" : "r_source"
}