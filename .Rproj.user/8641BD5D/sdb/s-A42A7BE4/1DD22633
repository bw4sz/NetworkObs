{
    "contents" : "\nsink(\"Bayesian/NmixturePoissonRagged2m.jags\")\n\ncat(\"\n    model {\n    #Compute true state for each pair of birds and plants\n    for (i in 1:Birds){\n    for (j in 1:Plants){\n    for (k in 1:Times){\n    \n    #Process Model\n    logit(rho[i,j,k])<-alpha[i] + beta1[i] * Traitmatch[i,j] + beta2[i] * resources[i,j,k]\n    \n    #True State\n    S[i,j,k] ~ dbern(rho[i,j,k])\n    }\n    }\n    }\n    \n    #Observation Model\n    for (x in 1:Nobs){\n    \n    #Observation Process for cameras\n    detect_cam[x]<-dcam * cam_surveys[x]\n\n    #Observation Process for transects\n    detect_transect[x]<-dtrans * trans_surveys[x]\n\n    Yobs_camera[x] ~ dbern(detect_cam[x] * S[Bird[x],Plant[x],Time[x]])    \n    Yobs_transect[x] ~ dbern(detect_transect[x] * S[Bird[x],Plant[x],Time[x]])    \n\n    #Assess Model Fit\n\n    #Fit discrepancy statistics\n    #eval[x]<-detect[Bird[x]]*S[Bird[x],Plant[x],Camera[x]]\n    #E[x]<-pow((Yobs[x]-eval[x]),2)/(eval[x]+0.5)\n    \n    #ynew[x]~dbin(detect[Bird[x]],S[Bird[x],Plant[x],Camera[x]])\n    #E.new[x]<-pow((ynew[x]-eval[x]),2)/(eval[x]+0.5)\n    \n    }\n\n    #Transect Prior\n    #Detect priors, logit transformed\n    #For Cameras\n    logit(dcam) <- dcam_logit\n    dcam_logit ~ dnorm(0,0.386)\n    \n    #For Transects\n    logit(dtrans) <- dtrans_logit\n    dtrans_logit ~ dnorm(0,0.386)\n    \n    #Species level priors\n    for (i in 1:Birds){\n      alpha[i] ~ dnorm(intercept,tau_alpha)\n      beta1[i] ~ dnorm(gamma1,tau_beta1)    \n      beta2[i] ~ dnorm(gamma2,tau_beta2)    \n    }\n\n    #Hyperpriors\n    #Slope grouping\n    gamma1~dnorm(0,0.0001)\n    gamma2~dnorm(0,0.0001)\n    \n    #Intercept grouping\n    intercept~dnorm(0,0.0001)\n    \n    #Detection group prior\n    #dprior_cam ~ dnorm(0,0.386)\n    #dprior_trans ~ dnorm(0,0.386)\n\n    # Group intercept variance\n    tau_alpha ~ dt(0,1,1)I(0,1)\n    sigma_alpha<-pow(1/tau_alpha,2) \n    \n    #Group effect detect camera\n    #tau_dcam ~ dunif(0,10)\n    #sigma_dcam<-pow(1/tau_dcam,.5)\n    \n    #Group effect detect camera\n    #tau_dtrans ~ dunif(0,10)\n    #sigma_dtrans<-pow(1/tau_dtrans,.5)\n\n    #Group Effect of traits\n    tau_beta1 ~ dt(0,1,1)I(0,)\n    sigma_slope1<-pow(1/tau_beta1,.5)\n    \n    #Group Effect of Resources\n    tau_beta2 ~ dt(0,1,1)I(0,)\n    sigma_slope2<-pow(1/tau_beta2,.5)\n\n}\n    \",fill=TRUE)\n\nsink()\n",
    "created" : 1460987733644.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2878528171",
    "id" : "1DD22633",
    "lastKnownWriteTime" : 1465274299,
    "path" : "~/NetworkPredict/Bayesian/NmixturePoissonRagged2m.R",
    "project_path" : "Bayesian/NmixturePoissonRagged2m.R",
    "properties" : {
    },
    "relative_order" : 5,
    "source_on_save" : false,
    "type" : "r_source"
}